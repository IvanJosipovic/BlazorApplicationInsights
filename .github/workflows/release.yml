on: 
  push:
    branches: 
      - master

name: Create Release
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Bump version
      id: version
      uses: anothrNick/github-tag-action@1.19.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DRY_RUN: true

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Dotnet Pack 
      working-directory: src/BlazorApplicationInsights
      run: dotnet pack -c Release -p:Version=${{ steps.version.outputs.new_tag }}

    - name: Dotnet Nuget Push
      if: "!contains(github.event.head_commit.message, '#skip')"
      working-directory: src/BlazorApplicationInsights/bin/Release
      run: dotnet nuget push BlazorApplicationInsights.*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
      continue-on-error: true

    - name: Dotnet Publish
      working-directory: src/BlazorApplicationInsights.Sample
      run: dotnet publish -c Release

    - name: Deploy to Production
      uses: netlify/actions/cli@master
      with:
        args: deploy --prod --json -d src/BlazorApplicationInsights.Sample/bin/Release/netstandard2.1/publish/wwwroot
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

    - name: Create Release
      if: "!contains(github.event.head_commit.message, '#skip')"
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.new_tag }}
        release_name: Release ${{ steps.version.outputs.new_tag }}
        draft: false
        prerelease: false